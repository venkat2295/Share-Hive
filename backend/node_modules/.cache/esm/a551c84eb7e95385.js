let express,registerUser,loginUser,userProfile,updateProfile,updateProfilePicture,getAllUsers,deleteUser,getUserDashboardData,changePassword,adminGuard,authGuard;_b7e‍.x([["default",()=>_b7e‍.o]]);_b7e‍.w("express",[["default",["express"],function(v){express=v}]]);_b7e‍.w("../controllers/userControllers",[["registerUser",["registerUser"],function(v){registerUser=v}],["loginUser",["loginUser"],function(v){loginUser=v}],["userProfile",["userProfile"],function(v){userProfile=v}],["updateProfile",["updateProfile"],function(v){updateProfile=v}],["updateProfilePicture",["updateProfilePicture"],function(v){updateProfilePicture=v}],["getAllUsers",["getAllUsers"],function(v){getAllUsers=v}],["deleteUser",["deleteUser"],function(v){deleteUser=v}],["getUserDashboardData",["getUserDashboardData"],function(v){getUserDashboardData=v}],["changePassword",["changePassword"],function(v){changePassword=v}]]);_b7e‍.w("../middleware/authMiddleware",[["adminGuard",["adminGuard"],function(v){adminGuard=v}],["authGuard",["authGuard"],function(v){authGuard=v}]]);
const router = express.Router();













router.post("/register", registerUser);
router.post("/login", loginUser);
router.get("/profile", authGuard, userProfile);
router.put("/updateProfile", authGuard, updateProfile);
router.put("/updateProfilePicture", authGuard, updateProfilePicture);
router.put("/changePassword", authGuard, changePassword);
router.get("/dashboard", authGuard, getUserDashboardData);
router.get("/", authGuard, adminGuard, getAllUsers);
router.delete("/:userId", authGuard, adminGuard, deleteUser);

_b7e‍.d(router);