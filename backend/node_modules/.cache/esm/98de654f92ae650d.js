let express,createPost,deletePost,getAllPosts,getPost,updatePost,getUserPosts,authGuard,adminGuard;_92a‍.x([["default",()=>_92a‍.o]]);_92a‍.w("express",[["default",["express"],function(v){express=v}]]);_92a‍.w("../controllers/postControllers",[["createPost",["createPost"],function(v){createPost=v}],["deletePost",["deletePost"],function(v){deletePost=v}],["getAllPosts",["getAllPosts"],function(v){getAllPosts=v}],["getPost",["getPost"],function(v){getPost=v}],["updatePost",["updatePost"],function(v){updatePost=v}],["getUserPosts",["getUserPosts"],function(v){getUserPosts=v}]]);_92a‍.w("../middleware/authMiddleware",[["authGuard",["authGuard"],function(v){authGuard=v}],["adminGuard",["adminGuard"],function(v){adminGuard=v}]]);
const router = express.Router();










// Modified routes
router.route("/")
  .post(authGuard, createPost)  // Removed adminGuard
  .get(getAllPosts);

router.route("/:slug")
  .put(authGuard, updatePost)  // Removed adminGuard
  .delete(authGuard, deletePost)  // Keep authGuard for deletion
  .get(getPost);

// New route for user dashboard
router.get("/user", authGuard, getUserPosts);

// Admin-only routes
router.get("/admin/all", authGuard, adminGuard, getAllPosts);

_92a‍.d(router);